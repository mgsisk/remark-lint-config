name: build

on: [push]

jobs:

  analyze:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@main
      - uses: actions/setup-node@main
      - run: npm clean-install
      - uses: codacy/codacy-analysis-cli-action@master
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [12.x, 14.x, 15.x]
    steps:
      - uses: actions/checkout@main
      - uses: actions/setup-node@main
        with:
          node-version: ${{ matrix.node }}
      - run: npm clean-install
      - run: npm test
      - if: matrix.node == '15.x'
        uses: codacy/codacy-coverage-reporter-action@master
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: coverage/lcov.info

  release:
    runs-on: ubuntu-latest
    needs: [test]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@main
      - uses: actions/setup-node@main
      - run: npm clean-install
      - id: set_vars
        run: |
          PACK=$(npm pack | tail -n 1)
          echo "::set-output name=tag_name::${GITHUB_REF#refs/tags/}"
          echo "::set-output name=tag_vers::${GITHUB_REF#refs/tags/v}"
          echo "::set-output name=tar_name::$PACK"
      - id: read_changelog
        uses: mindsers/changelog-reader-action@master
        with:
          version: ${{ steps.set_vars.outputs.tag_vers }}
      - id: create_release
        uses: softprops/action-gh-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body: ${{ steps.read_changelog.outputs.changes }}
          draft: ${{ steps.read_changelog.outputs.status == 'unreleased' }}
          files: ./${{ steps.set_vars.outputs.tar_name }}
          prerelease: ${{ steps.read_changelog.outputs.status == 'prereleased' }}
          tag_name: ${{ steps.set_vars.outputs.tag_name }}

  publish-npm:
    runs-on: ubuntu-latest
    needs: [release]
    steps:
      - uses: actions/checkout@main
      - uses: actions/setup-node@main
      - run: npm clean-install
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-gpr:
    runs-on: ubuntu-latest
    needs: [release]
    steps:
      - uses: actions/checkout@main
      - uses: actions/setup-node@main
        with:
          registry-url: https://npm.pkg.github.com
      - run: npm clean-install
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
